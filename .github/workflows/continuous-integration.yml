name: Continuous Integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - 'feature/**'
      - 'bugfix/**'
      - 'hotfix/**'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  id-token: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality-gate:
    name: Quality Gate (${{ matrix.vs_code_channel }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        node-version: ['22.x']
        vs_code_channel: ['stable', 'insiders']
    env:
      VS_CODE_CHANNEL: ${{ matrix.vs_code_channel }}
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run quality gate sequence
        env:
          NODE_OPTIONS: ""
        run: >-
          xvfb-run --auto-servernum --server-args='-screen 0 1280x720x24'
          node scripts/run-quality-gate.mjs

      - name: Collect quality gate artefacts
        if: always()
        run: |
          mkdir -p artefacts
          if [ -f telemetry/gate-report.json ]; then
            cp telemetry/gate-report.json artefacts/quality-gate.json
          fi
          if [ -f coverage/lcov.info ]; then
            cp coverage/lcov.info artefacts/lcov.info
          fi
          if [ -f coverage/coverage-summary.json ]; then
            cp coverage/coverage-summary.json artefacts/coverage-summary.json
          fi

      - name: Upload quality gate artefacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quality-gate-${{ matrix.vs_code_channel }}
          path: artefacts/
          retention-days: 14

  bicep-lint-publish:
    name: Lint & Publish Bicep
    uses: ./.github/workflows/lint-and-publish-bicep.yml
    secrets: inherit

  security-scans:
    name: Security & Dependency Scans (${{ matrix.vs_code_channel }})
    runs-on: ubuntu-latest
    needs: quality-gate
    strategy:
      fail-fast: true
      matrix:
        node-version: ['22.x']
        vs_code_channel: ['stable', 'insiders']
    env:
      VS_CODE_CHANNEL: ${{ matrix.vs_code_channel }}
      NODE_OPTIONS: --max-old-space-size=4096
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit (fail on high severity)
        run: npm audit --production --audit-level=high

      - name: Run ESLint security scan (SARIF)
        run: |
          npx eslint --ext .ts,.tsx --format sarif --output-file eslint-results.sarif .
        continue-on-error: false

      - name: Upload ESLint SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: eslint-results.sarif

      - name: Run Trivy dependency scan
        uses: aquasecurity/trivy-action@0.27.0
        with:
          scan-type: fs
          format: sarif
          output: trivy-results.sarif
          severity: HIGH,CRITICAL
          exit-code: '1'

      - name: Upload Trivy SARIF
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Dependency review (pull requests only)
        if: github.event_name == 'pull_request'
        uses: actions/dependency-review-action@v4

  telemetry-publish:
    name: Publish Quality Gate Telemetry
    runs-on: ubuntu-latest
    needs: [quality-gate, security-scans]
    if: always()
    steps:
      - name: Download artefacts
        uses: actions/download-artifact@v4
        with:
          pattern: quality-gate-*
          merge-multiple: true

      - name: Summarize gate results
        id: summarize
        run: |
          if [ -f quality-gate.json ]; then
            cat quality-gate.json
          else
            echo '{}' > quality-gate.json
          fi

      - name: Upload consolidated telemetry artefact
        uses: actions/upload-artifact@v4
        with:
          name: quality-gate-telemetry
          path: quality-gate.json
          retention-days: 14
