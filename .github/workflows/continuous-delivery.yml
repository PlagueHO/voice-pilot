name: Continuous Delivery

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      environment:
        description: Target deployment environment
        type: choice
        options:
          - test
          - pro
        required: true
      azure_location:
        description: Azure region for deployment resources
        required: false
      change_ticket:
        description: Change management ticket or approval ID
        required: true
      retain_resources:
        description: Retain infrastructure after validation (optional override)
        type: boolean
        required: false

permissions:
  contents: write
  packages: write
  id-token: write
  security-events: write

concurrency:
  group: cd-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate_infrastructure:
    name: Validate infrastructure
    uses: ./.github/workflows/validate-infrastructure.yml
    secrets: inherit
    with:
      ENVIRONMENT: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || (startsWith(github.ref, 'refs/tags/v') && 'prod' || 'test') }}
      AZURE_LOCATION: ${{ github.event_name == 'workflow_dispatch' && inputs.azure_location || vars.AZURE_LOCATION || 'eastus2' }}
      AZURE_ENV_NAME: voicepilot-${{ github.event_name == 'workflow_dispatch' && inputs.environment || (startsWith(github.ref, 'refs/tags/v') && 'prod' || 'test') }}-${{ github.run_id }}

  package_extension:
    name: Package extension artefacts
    needs:
      - validate_infrastructure
    runs-on: ubuntu-latest
    environment: ${{ github.event_name == 'workflow_dispatch' && inputs.environment || (startsWith(github.ref, 'refs/tags/v') && 'prod' || 'test') }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Set deployment context
        run: |
          TARGET_ENV="${{ github.event_name == 'workflow_dispatch' && inputs.environment || (startsWith(github.ref, 'refs/tags/v') && 'prod' || 'test') }}"
          echo "TARGET_ENVIRONMENT=$TARGET_ENV" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" = 'workflow_dispatch' ]; then
            echo "CHANGE_TICKET=${{ inputs.change_ticket }}" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "CHANGE_TICKET=release-${{ github.ref_name }}" >> $GITHUB_ENV
          else
            echo "CHANGE_TICKET=test-${{ github.run_id }}" >> $GITHUB_ENV
          fi

      - name: Install dependencies
        run: npm ci

      - name: Build VSIX package
        run: npm run package

      - name: Prepare artefact directory
        id: artefacts
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          mkdir -p artefacts previous
          latest_vsix=$(ls -1 *.vsix | head -n 1)
          if [ -z "$latest_vsix" ]; then
            echo "VSIX package not found" >&2
            exit 1
          fi
          mv "$latest_vsix" artefacts/current.vsix
          shasum -a 256 artefacts/current.vsix > artefacts/current.sha256
          if [ "${GITHUB_EVENT_NAME}" = 'push' ]; then
            gh release download "${GITHUB_REF_NAME}" --repo "${GITHUB_REPOSITORY}" --pattern '*.vsix' --dir previous || true
          fi
          if ls previous/*.vsix >/dev/null 2>&1; then
            prev=$(ls -1 previous/*.vsix | head -n 1)
            cp "$prev" artefacts/previous.vsix
            shasum -a 256 "$prev" > artefacts/previous.sha256
          fi

      - name: Publish VSIX to Marketplace (prod only)
        if: env.TARGET_ENVIRONMENT == 'prod'
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          if [ -z "$VSCE_PAT" ]; then
            echo "VSCE_PAT secret not configured; skipping marketplace publish." >&2
            exit 0
          fi
          npx vsce publish --packagePath artefacts/current.vsix

      - name: Upload deployment artefacts
        uses: actions/upload-artifact@v5
        with:
          name: deployment-${{ env.TARGET_ENVIRONMENT }}
          path: artefacts/
          retention-days: 14

  post_deployment_verification:
    name: Post-deployment verification
    needs:
      - validate_infrastructure
      - package_extension
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' && inputs.environment == 'test' || (github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set up Node.js 22.x
        uses: actions/setup-node@v6
        with:
          node-version: '22.x'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set verification context
        run: |
          echo "TARGET_ENVIRONMENT=test" >> $GITHUB_ENV
          if [ "${{ github.event_name }}" = 'workflow_dispatch' ]; then
            echo "CHANGE_TICKET=${{ inputs.change_ticket }}" >> $GITHUB_ENV
          else
            echo "CHANGE_TICKET=release-${{ github.run_id }}" >> $GITHUB_ENV
          fi

      - name: Execute performance probes
        run: npm run test:perf

  rollback_infrastructure:
    name: Rollback infrastructure
    needs:
      - validate_infrastructure
      - post_deployment_verification
    if: failure() && (github.event_name == 'workflow_dispatch' && inputs.environment == 'test' || github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))
    uses: ./.github/workflows/delete-infrastructure.yml
    secrets: inherit
    with:
      ENVIRONMENT: test
      AZURE_ENV_NAME: voicepilot-test-${{ github.run_id }}
      AZURE_LOCATION: ${{ github.event_name == 'workflow_dispatch' && inputs.azure_location || vars.AZURE_LOCATION || 'eastus2' }}

  rollback_application_test:
    name: Rollback extension package (test)
    needs:
      - validate_infrastructure
      - package_extension
      - post_deployment_verification
    if: failure() && (github.event_name == 'workflow_dispatch' && inputs.environment == 'test' || github.event_name == 'push' && !startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Download deployment artefacts
        uses: actions/download-artifact@v6
        with:
          name: deployment-test
          path: artefacts

      - name: Publish previous VSIX
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          if [ -z "$VSCE_PAT" ]; then
            echo "VSCE_PAT secret not configured; skipping rollback publish." >&2
            exit 0
          fi
          if [ ! -f artefacts/previous.vsix ]; then
            echo "Previous VSIX artefact not available; rollback skipped."
            exit 0
          fi
          npx vsce publish --packagePath artefacts/previous.vsix

      - name: Report rollback completion
        run: echo "Rollback routine executed for test environment"

  rollback_application_prod:
    name: Rollback extension package (prod)
    needs:
      - validate_infrastructure
      - package_extension
    if: failure() && (github.event_name == 'workflow_dispatch' && inputs.environment == 'prod' || startsWith(github.ref, 'refs/tags/v'))
    runs-on: ubuntu-latest
    steps:
      - name: Download deployment artefacts
        uses: actions/download-artifact@v6
        with:
          name: deployment-prod
          path: artefacts

      - name: Publish previous VSIX
        env:
          VSCE_PAT: ${{ secrets.VSCE_PAT }}
        run: |
          if [ -z "$VSCE_PAT" ]; then
            echo "VSCE_PAT secret not configured; skipping rollback publish." >&2
            exit 0
          fi
          if [ ! -f artefacts/previous.vsix ]; then
            echo "Previous VSIX artefact not available; rollback skipped."
            exit 0
          fi
          npx vsce publish --packagePath artefacts/previous.vsix

      - name: Report rollback completion
        run: echo "Rollback routine executed for prod deployment"
