version: '3.9'

services:
  app:
    build:
      context: ..
      dockerfile: .devcontainer/Dockerfile
    volumes:
      # Main workspace volume with optimized consistency
      - ../..:/workspaces:cached
      # Git directory for better performance
      - ../.git:/workspaces/voice-pilot/.git:cached
      # Node modules volume for better performance
      - voice-pilot-node-modules:/workspaces/voice-pilot/node_modules
      # VS Code extensions volume
      - voice-pilot-vscode-extensions:/home/node/.vscode-server/extensions
      # NPM cache volume
      - voice-pilot-npm-cache:/home/node/.npm
    command: sleep infinity
    environment:
      - NODE_ENV=development
      - EXTENSION_DEVELOPMENT_HOST=true
      - NPM_CONFIG_UPDATE_NOTIFIER=false
      - NPM_CONFIG_FUND=false
      # Enable VS Code debugging
      - NODE_OPTIONS=--inspect=0.0.0.0:9229
    ports:
      - "3000:3000"   # Development server
      - "5000:5000"   # Alternative web server
      - "5001:5001"   # HTTPS web server
      - "8080:8080"   # Additional development port
      - "9229:9229"   # Node.js debugging
    # Add capabilities for audio development and debugging
    cap_add:
      - SYS_PTRACE
    security_opt:
      - seccomp:unconfined
    # Use bridge network for better isolation while maintaining connectivity
    networks:
      - voice-pilot-dev
    # Add memory limits for development stability
    mem_limit: 4g
    memswap_limit: 4g
    # Add health check
    healthcheck:
      test: ["CMD", "node", "--version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Restart policy for development
    restart: unless-stopped
    
  # Optional: PostgreSQL for database development and testing
  postgres:
    image: postgres:16-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: voicepilot_dev
      POSTGRES_USER: dev
      POSTGRES_PASSWORD: dev_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - voice-pilot-postgres-data:/var/lib/postgresql/data
      - ./postgres-init:/docker-entrypoint-initdb.d:ro
    networks:
      - voice-pilot-dev
    profiles:
      - database
      - full

  # Optional: Redis for caching during development
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass dev_password
    volumes:
      - voice-pilot-redis-data:/data
    networks:
      - voice-pilot-dev
    profiles:
      - cache
      - full
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 3s
      retries: 5

  # Optional: Nginx for reverse proxy and static file serving
  nginx:
    image: nginx:alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - voice-pilot-nginx-cache:/var/cache/nginx
    networks:
      - voice-pilot-dev
    profiles:
      - proxy
      - full
    depends_on:
      - app

# Named volumes for better performance and persistence
volumes:
  voice-pilot-node-modules:
    driver: local
  voice-pilot-vscode-extensions:
    driver: local
  voice-pilot-npm-cache:
    driver: local
  voice-pilot-postgres-data:
    driver: local
  voice-pilot-redis-data:
    driver: local
  voice-pilot-nginx-cache:
    driver: local

# Custom network for service isolation
networks:
  voice-pilot-dev:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16