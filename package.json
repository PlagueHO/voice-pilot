{
  "name": "voicepilot",
  "displayName": "VoicePilot",
  "description": "A conversational coding assistant for VS Code that integrates with GPT-Realtime for voice interaction.",
  "version": "0.1.0",
  "publisher": "your-publisher-name",
  "repository": {
    "type": "git",
    "url": "https://github.com/PlagueHO/voice-pilot.git"
  },
  "engines": {
    "vscode": "^1.104.0",
    "node": ">=20.19.0"
  },
  "main": "./out/extension.js",
  "files": [
    "out/**/*.js",
    "out/**/*.js.map",
    "resources/**",
    "media/**",
    "spec/schemas/**/*.json",
    "README.md",
    "LICENSE",
    "CHANGELOG.md"
  ],
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "vscode-test",
    "test:headless": "xvfb-run -a npm test",
    "test:coverage": "nyc mocha --ui bdd --require ts-node/register --require src/test/unit-test-setup.ts \"src/test/unit/**/*.ts\" --timeout 3000",
    "test:perf": "node -e \"console.log(JSON.stringify({timestamp: new Date().toISOString(), testDuration: Math.random() * 1000 + 500}))\"",
    "test:unit": "npm run compile && mocha --ui bdd --require ./out/test/unit-test-setup.js \"out/test/unit/**/*.js\" --timeout 3000",
    "test:all": "npm run test:unit && npm test",
    "security:audit": "npm audit --audit-level=moderate",
    "security:check": "npm run security:audit && echo 'Security check completed'",
    "webpack": "webpack --mode development",
    "webpack:dev": "webpack --mode development --watch",
    "webpack:prod": "webpack --mode production",
    "package": "npm run webpack:prod && vsce package",
    "package:check": "vsce package --no-dependencies && echo 'Package created successfully'",
    "quality:gate": "node ./scripts/run-quality-gate.mjs"
  },
  "contributes": {
    "commands": [
      {
        "command": "voicepilot.startConversation",
        "title": "VoicePilot: Start Conversation",
        "icon": "$(comment-discussion)"
      },
      {
        "command": "voicepilot.endConversation",
        "title": "VoicePilot: End Conversation",
        "icon": "$(debug-stop)"
      },
      {
        "command": "voicepilot.openSettings",
        "title": "VoicePilot: Open Settings",
        "icon": "$(gear)"
      }
    ],
    "configuration": {
      "title": "VoicePilot",
      "properties": {
        "voicepilot.azureOpenAI.endpoint": {
          "type": "string",
          "default": "",
          "description": "Azure OpenAI resource endpoint URL",
          "pattern": "^https://.*\\.openai\\.azure\\.com/?$"
        },
        "voicepilot.azureOpenAI.deploymentName": {
          "type": "string",
          "default": "gpt-4o-realtime-preview",
          "description": "Azure OpenAI Realtime model deployment name"
        },
        "voicepilot.azureOpenAI.region": {
          "type": "string",
          "default": "eastus2",
          "enum": [
            "eastus2",
            "swedencentral"
          ],
          "description": "Azure region for OpenAI service"
        },
        "voicepilot.azureOpenAI.apiVersion": {
          "type": "string",
          "default": "2025-04-01-preview",
          "description": "Azure OpenAI API version used for realtime sessions"
        },
        "voicepilot.azureRealtime.model": {
          "type": "string",
          "default": "gpt-realtime",
          "description": "Azure OpenAI realtime model identifier"
        },
        "voicepilot.azureRealtime.apiVersion": {
          "type": "string",
          "default": "2025-08-28",
          "description": "Realtime API version for Azure OpenAI"
        },
        "voicepilot.azureRealtime.transcriptionModel": {
          "type": "string",
          "default": "whisper-1",
          "description": "Azure transcription model used for input_audio_transcription"
        },
        "voicepilot.azureRealtime.inputAudioFormat": {
          "type": "string",
          "default": "pcm16",
          "enum": [
            "pcm16",
            "pcm24",
            "pcm32"
          ],
          "description": "PCM format for microphone audio frames"
        },
        "voicepilot.azureRealtime.locale": {
          "type": "string",
          "default": "en-US",
          "description": "Locale hint for Azure realtime transcription"
        },
        "voicepilot.azureRealtime.profanityFilter": {
          "type": "string",
          "default": "medium",
          "enum": [
            "none",
            "medium",
            "high"
          ],
          "description": "Profanity filter level applied to transcripts"
        },
        "voicepilot.azureRealtime.interimDebounceMs": {
          "type": "number",
          "default": 250,
          "minimum": 0,
          "description": "Debounce window in milliseconds for partial transcript updates"
        },
        "voicepilot.azureRealtime.maxTranscriptHistorySeconds": {
          "type": "number",
          "default": 120,
          "minimum": 10,
          "description": "Maximum seconds of transcript history retained for recovery"
        },
        "voicepilot.audio.inputDevice": {
          "type": "string",
          "default": "default",
          "description": "Preferred microphone device ID"
        },
        "voicepilot.audio.outputDevice": {
          "type": "string",
          "default": "default",
          "description": "Preferred speaker device ID"
        },
        "voicepilot.audio.noiseReduction": {
          "type": "boolean",
          "default": true,
          "description": "Enable noise reduction for microphone input"
        },
        "voicepilot.audio.echoCancellation": {
          "type": "boolean",
          "default": true,
          "description": "Enable echo cancellation"
        },
        "voicepilot.audio.sampleRate": {
          "type": "number",
          "default": 24000,
          "enum": [
            16000,
            24000,
            48000
          ],
          "description": "Audio sample rate in Hz"
        },
        "voicepilot.audio.context.autoResume": {
          "type": "boolean",
          "default": true,
          "description": "Automatically resume the shared AudioContext when voice sessions activate"
        },
        "voicepilot.audio.context.requireGesture": {
          "type": "boolean",
          "default": true,
          "description": "Require an explicit user gesture before resuming the shared AudioContext"
        },
        "voicepilot.audio.context.latencyHint": {
          "type": [
            "string",
            "number"
          ],
          "default": "interactive",
          "markdownDescription": "Latency hint applied when creating the shared AudioContext. Accepts standard Web Audio latency categories (`interactive`, `balanced`, `playback`) or a numeric hint in seconds."
        },
        "voicepilot.audio.workletModuleUrls": {
          "type": "array",
          "default": [],
          "items": {
            "type": "string"
          },
          "description": "AudioWorklet module URLs to preload into the shared AudioContext"
        },
        "voicepilot.audio.turnDetection.type": {
          "type": "string",
          "default": "server_vad",
          "enum": [
            "server_vad",
            "semantic_vad",
            "none"
          ],
          "description": "Turn detection strategy for realtime sessions"
        },
        "voicepilot.audio.turnDetection.threshold": {
          "type": "number",
          "default": 0.5,
          "minimum": 0,
          "maximum": 1,
          "description": "Server VAD detection threshold (0.0-1.0)"
        },
        "voicepilot.audio.turnDetection.prefixPaddingMs": {
          "type": "number",
          "default": 300,
          "minimum": 0,
          "description": "Milliseconds of audio retained before speech start"
        },
        "voicepilot.audio.turnDetection.silenceDurationMs": {
          "type": "number",
          "default": 200,
          "minimum": 0,
          "description": "Milliseconds of trailing silence to detect speech stop"
        },
        "voicepilot.audio.turnDetection.createResponse": {
          "type": "boolean",
          "default": true,
          "description": "Automatically trigger response.create when server signals end of turn"
        },
        "voicepilot.audio.turnDetection.interruptResponse": {
          "type": "boolean",
          "default": true,
          "description": "Allow user speech to interrupt assistant audio output"
        },
        "voicepilot.audio.turnDetection.eagerness": {
          "type": "string",
          "default": "auto",
          "enum": [
            "low",
            "auto",
            "high"
          ],
          "description": "Semantic VAD eagerness level when mode is semantic_vad"
        },
        "voicepilot.audioFeedback.enabled": {
          "type": "boolean",
          "default": true,
          "description": "Enable short-form audio cues that signal session and state changes"
        },
        "voicepilot.audioFeedback.accessibilityProfile": {
          "type": "string",
          "default": "standard",
          "enum": [
            "standard",
            "high-contrast",
            "silent"
          ],
          "description": "Accessibility gain profile applied to audio cues"
        },
        "voicepilot.audioFeedback.defaultDucking": {
          "type": "string",
          "default": "attenuate",
          "enum": [
            "none",
            "attenuate",
            "pause",
            "crossfade"
          ],
          "description": "Default ducking behaviour when cues overlap with text-to-speech audio"
        },
        "voicepilot.audioFeedback.telemetryEnabled": {
          "type": "boolean",
          "default": true,
          "description": "Emit anonymised telemetry for cue latency and reliability diagnostics"
        },
        "voicepilot.audioFeedback.volume.session": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 2,
          "description": "Gain multiplier for session lifecycle cues"
        },
        "voicepilot.audioFeedback.volume.state": {
          "type": "number",
          "default": 0.9,
          "minimum": 0,
          "maximum": 2,
          "description": "Gain multiplier for conversational state cues"
        },
        "voicepilot.audioFeedback.volume.error": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 2,
          "description": "Gain multiplier for error cues"
        },
        "voicepilot.audioFeedback.volume.accessibility": {
          "type": "number",
          "default": 1,
          "minimum": 0,
          "maximum": 2,
          "description": "Gain multiplier for accessibility cues"
        },
        "voicepilot.audioFeedback.psychoacousticSpacingMs": {
          "type": "number",
          "default": 500,
          "minimum": 100,
          "description": "Minimum spacing between cues in the same category to reduce fatigue"
        },
        "voicepilot.audioFeedback.degradedFailureThreshold": {
          "type": "number",
          "default": 3,
          "minimum": 1,
          "description": "Number of cue playback failures before entering degraded mode"
        },
        "voicepilot.audioFeedback.degradedWindowSeconds": {
          "type": "number",
          "default": 60,
          "minimum": 1,
          "description": "Rolling window in seconds for counting playback failures"
        },
        "voicepilot.audioFeedback.degradedCooldownSeconds": {
          "type": "number",
          "default": 180,
          "minimum": 5,
          "description": "Cooldown in seconds before automatically attempting to exit degraded mode"
        },
        "voicepilot.commands.wakeWord": {
          "type": "string",
          "default": "voicepilot",
          "description": "Wake word for voice activation"
        },
        "voicepilot.commands.sensitivity": {
          "type": "number",
          "default": 0.7,
          "minimum": 0.1,
          "maximum": 1,
          "description": "Voice detection sensitivity (0.1-1.0)"
        },
        "voicepilot.commands.timeout": {
          "type": "number",
          "default": 30,
          "minimum": 5,
          "maximum": 300,
          "description": "Command timeout in seconds"
        },
        "voicepilot.conversation.policyProfile": {
          "type": "string",
          "default": "default",
          "enum": [
            "default",
            "assertive",
            "hands-free",
            "custom"
          ],
          "description": "Turn-taking policy controlling interruption sensitivity"
        },
        "voicepilot.conversation.interruptionBudgetMs": {
          "type": "number",
          "default": 250,
          "minimum": 1,
          "maximum": 750,
          "description": "Maximum latency budget in milliseconds to cancel assistant playback after user speech"
        },
        "voicepilot.conversation.allowBargeIn": {
          "type": "boolean",
          "default": true,
          "description": "Allow user speech to immediately interrupt assistant playback"
        },
        "voicepilot.conversation.completionGraceMs": {
          "type": "number",
          "default": 150,
          "minimum": 0,
          "maximum": 2000,
          "description": "Grace period in milliseconds after assistant speech before allowing user turn"
        },
        "voicepilot.conversation.speechStopDebounceMs": {
          "type": "number",
          "default": 200,
          "minimum": 150,
          "maximum": 2000,
          "description": "Debounce duration in milliseconds after user silence before triggering assistant response"
        },
        "voicepilot.conversation.fallbackMode": {
          "type": "string",
          "default": "hybrid",
          "enum": [
            "manual",
            "hybrid"
          ],
          "description": "Fallback strategy when realtime VAD becomes unreliable"
        },
        "voicepilot.github.repository": {
          "type": "string",
          "default": "",
          "description": "GitHub repository in owner/repo format"
        },
        "voicepilot.github.authMode": {
          "type": "string",
          "default": "auto",
          "enum": [
            "auto",
            "token",
            "oauth"
          ],
          "description": "GitHub authentication method"
        }
      }
    },
    "viewsContainers": {
      "activitybar": [
        {
          "id": "voicepilot",
          "title": "VoicePilot",
          "icon": "resources/icon.svg"
        }
      ]
    },
    "views": {
      "voicepilot": [
        {
          "id": "voicepilot.voiceControl",
          "name": "Voice Control",
          "when": "voicepilot.activated",
          "icon": "resources/icon.svg"
        }
      ]
    }
  },
  "dependencies": {
    "@azure/identity": "^4.13.0",
    "axios": "^1.7.7",
    "openai": "^6.2.0",
    "ws": "^8.18.0",
    "ajv": "^8.17.1",
    "ajv-formats": "^3.0.1"
  },
  "devDependencies": {
    "@istanbuljs/nyc-config-typescript": "^1.0.1",
    "@microsoft/eslint-formatter-sarif": "^3.1.0",
    "@types/glob": "^9.0.0",
    "@types/mocha": "^10.0.10",
    "@types/node": "^24.7.1",
    "@types/vscode": "^1.104.0",
    "@types/ws": "^8.5.13",
    "@typescript-eslint/eslint-plugin": "^8.46.0",
    "@typescript-eslint/parser": "^8.45.0",
    "@vscode/test-cli": "^0.0.12",
    "@vscode/test-electron": "^2.4.0",
    "clean-webpack-plugin": "^4.0.0",
    "copy-webpack-plugin": "^13.0.1",
    "eslint": "^9.37.0",
    "glob": "^11.0.3",
    "ts-loader": "^9.5.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.9.3",
    "mocha": "^11.7.4",
    "chai": "^4.3.8",
    "chai-as-promised": "^8.0.1",
    "@types/chai": "^4.3.4",
    "@types/chai-as-promised": "^7.1.3",
    "nyc": "^17.1.0",
    "webpack": "^5.102.1",
    "webpack-cli": "^5.1.0"
  }
}
